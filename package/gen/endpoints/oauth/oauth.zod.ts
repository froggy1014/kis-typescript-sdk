/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Korea Investment API
 * 
[OpenAPI json 링크](http://localhost:8080/swagger.json)

[API 문서 링크](https://api.koreainvestment.com/openapi/docs)

## 🔐 인증 방법
1. **상단의 "Authorize" 버튼을 클릭**하여 API 키들을 입력하세요
2. 필요한 헤더 정보:
   - **appkey**: 한국투자증권에서 발급받은 앱키
   - **appsecret**: 한국투자증권에서 발급받은 앱시크릿
   - **tr_id**: API별 고유 거래ID (각 API 문서 참조)
   - **custtype**: 고객타입 (P: 개인, B: 법인)

## 🚀 사용 방법
- OAuth API는 appkey, appsecret만 필요
- 시세 조회 API는 모든 헤더 정보 필요
- WebSocket 연결 시에는 별도 접속키 발급 필요
			
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';


/**
 * API 호출 시 필요한 hashkey를 생성합니다
 * @summary Hashkey 생성
 */
export const postUapiHashkeyBody = zod.object({
  "datas": zod.record(zod.string(), zod.string()).describe('해시키 생성을 위한 데이터')
})

export const postUapiHashkeyResponse = zod.object({
  "HASH": zod.string().describe('생성된 해시키')
})

/**
 * 한국투자증권 API 접근을 위한 토큰을 발급받습니다
 * @summary 접근토큰 발급(P)
 */
export const postOauth2TokenPBodyGrantTypeDefault = "client_credentials";

export const postOauth2TokenPBody = zod.object({
  "grant_type": zod.string().default(postOauth2TokenPBodyGrantTypeDefault).describe('권한 부여 타입'),
  "appkey": zod.string().describe('앱키'),
  "appsecret": zod.string().describe('앱시크릿')
})

export const postOauth2TokenPResponse = zod.object({
  "access_token": zod.string().describe('액세스 토큰'),
  "access_token_token_expired": zod.string().describe('토큰 만료 시각'),
  "token_type": zod.string().describe('토큰 타입'),
  "expires_in": zod.number().describe('토큰 유효시간(초)')
})

/**
 * 발급받은 접근토큰을 폐기합니다
 * @summary 접근토큰 폐기(P)
 */
export const postOauth2RevokePBody = zod.object({
  "token": zod.string().describe('폐기할 토큰')
})

export const postOauth2RevokePResponse = zod.object({
  "code": zod.string().describe('응답 코드'),
  "message": zod.string().describe('응답 메시지')
})

/**
 * 웹소켓 실시간 시세를 위한 접속키를 발급받습니다
 * @summary 실시간 (웹소켓) 접속키 발급
 */
export const postOauth2ApprovalBodyGrantTypeDefault = "client_credentials";

export const postOauth2ApprovalBody = zod.object({
  "grant_type": zod.string().default(postOauth2ApprovalBodyGrantTypeDefault).describe('권한 부여 타입'),
  "appKey": zod.string().describe('앱키'),
  "secretkey": zod.string().describe('앱시크릿')
})

export const postOauth2ApprovalResponse = zod.object({
  "approval_key": zod.string().describe('웹소켓 접속 승인키')
})

