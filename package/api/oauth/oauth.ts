/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Korea Investment API
 * 
[OpenAPI json 링크](https://comforting-meringue-518bd8.netlify.app/swagger.json)

[API 문서 링크](https://api.koreainvestment.com/openapi/docs)

## 🔐 인증 방법
1. **상단의 "Authorize" 버튼을 클릭**하여 API 키들을 입력하세요
2. 필요한 헤더 정보:
   - **appkey**: 한국투자증권에서 발급받은 앱키
   - **appsecret**: 한국투자증권에서 발급받은 앱시크릿
   - **tr_id**: API별 고유 거래ID (각 API 문서 참조)
   - **custtype**: 고객타입 (P: 개인, B: 법인)

## 🚀 사용 방법
- OAuth API는 appkey, appsecret만 필요
- 시세 조회 API는 모든 헤더 정보 필요
- WebSocket 연결 시에는 별도 접속키 발급 필요
			
 * OpenAPI spec version: 1.0.0
 */
import type {
  ApprovalKeyRequest,
  ApprovalKeyResponse,
  HashKeyRequest,
  HashKeyResponse,
  RevokeRequest,
  RevokeResponse,
  TokenRequest,
  TokenResponse
} from '../../model';

import { kisInstance } from '../../mutator/kis-instance';



  /**
 * API 호출 시 필요한 hashkey를 생성합니다
 * @summary Hashkey 생성
 */
export const postUapiHashkey = (
    hashKeyRequest: HashKeyRequest,
 ) => {
      return kisInstance<HashKeyResponse>(
      {url: `/uapi/hashkey`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: hashKeyRequest
    },
      );
    }
  /**
 * 한국투자증권 API 접근을 위한 토큰을 발급받습니다
 * @summary 접근토큰 발급(P)
 */
export const postOauth2TokenP = (
    tokenRequest: TokenRequest,
 ) => {
      return kisInstance<TokenResponse>(
      {url: `/oauth2/tokenP`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: tokenRequest
    },
      );
    }
  /**
 * 발급받은 접근토큰을 폐기합니다
 * @summary 접근토큰 폐기(P)
 */
export const postOauth2RevokeP = (
    revokeRequest: RevokeRequest,
 ) => {
      return kisInstance<RevokeResponse>(
      {url: `/oauth2/revokeP`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: revokeRequest
    },
      );
    }
  /**
 * 웹소켓 실시간 시세를 위한 접속키를 발급받습니다
 * @summary 실시간 (웹소켓) 접속키 발급
 */
export const postOauth2Approval = (
    approvalKeyRequest: ApprovalKeyRequest,
 ) => {
      return kisInstance<ApprovalKeyResponse>(
      {url: `/oauth2/Approval`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: approvalKeyRequest
    },
      );
    }
  export type PostUapiHashkeyResult = NonNullable<Awaited<ReturnType<typeof postUapiHashkey>>>
export type PostOauth2TokenPResult = NonNullable<Awaited<ReturnType<typeof postOauth2TokenP>>>
export type PostOauth2RevokePResult = NonNullable<Awaited<ReturnType<typeof postOauth2RevokeP>>>
export type PostOauth2ApprovalResult = NonNullable<Awaited<ReturnType<typeof postOauth2Approval>>>
